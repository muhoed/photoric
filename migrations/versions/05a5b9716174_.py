"""empty message

Revision ID: 05a5b9716174
Revises: 
Create Date: 2021-01-10 21:00:30.825369

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '05a5b9716174'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('allowances', flask_authorize.mixins.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('menus',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('html_class', sa.String(length=255), nullable=False),
    sa.Column('html_style', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('navbars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('html_class', sa.String(length=255), nullable=False),
    sa.Column('html_style', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('restrictions', flask_authorize.mixins.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('albums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('keywords', sa.String(length=255), nullable=True),
    sa.Column('icon_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('published_on', sa.DateTime(), nullable=True),
    sa.Column('other_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('owner_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('group_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['albums.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_albums_published_on'), 'albums', ['published_on'], unique=False)
    op.create_table('configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(), nullable=False),
    sa.Column('view_mode', sa.String(), nullable=False),
    sa.Column('other_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('owner_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('group_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('menu_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('menu_id', sa.Integer(), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('item_type', sa.String(length=20), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('desc', sa.String(length=255), nullable=False),
    sa.Column('item_target', sa.String(length=255), nullable=True),
    sa.Column('icon_type', sa.String(length=50), nullable=True),
    sa.Column('icon_src', sa.String(length=255), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('anonym_only', sa.Boolean(), nullable=False),
    sa.Column('auth_req', sa.Boolean(), nullable=False),
    sa.Column('group_req', sa.String(length=100), nullable=True),
    sa.Column('role_req', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['menu_items.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('navbar_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('navbar_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('item_type', sa.String(length=100), nullable=False),
    sa.Column('item_target', sa.String(length=255), nullable=True),
    sa.Column('icon_type', sa.String(length=50), nullable=True),
    sa.Column('icon_src', sa.String(length=255), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('anonym_only', sa.Boolean(), nullable=False),
    sa.Column('auth_req', sa.Boolean(), nullable=False),
    sa.Column('group_req', sa.String(length=100), nullable=True),
    sa.Column('role_req', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['navbar_id'], ['navbars.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_group',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], )
    )
    op.create_table('images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('keywords', sa.String(length=255), nullable=True),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('url', sa.String(length=255), nullable=False),
    sa.Column('uploaded_on', sa.DateTime(), nullable=False),
    sa.Column('captured_on', sa.DateTime(), nullable=True),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('is_published', sa.Boolean(), nullable=False),
    sa.Column('published_on', sa.DateTime(), nullable=True),
    sa.Column('other_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('owner_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('group_permissions', flask_authorize.mixins.PipedList(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['parent_id'], ['albums.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('filename'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_images_published_on'), 'images', ['published_on'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_images_published_on'), table_name='images')
    op.drop_table('images')
    op.drop_table('user_role')
    op.drop_table('user_group')
    op.drop_table('navbar_items')
    op.drop_table('menu_items')
    op.drop_table('configs')
    op.drop_index(op.f('ix_albums_published_on'), table_name='albums')
    op.drop_table('albums')
    op.drop_table('users')
    op.drop_table('roles')
    op.drop_table('navbars')
    op.drop_table('menus')
    op.drop_table('groups')
    # ### end Alembic commands ###
